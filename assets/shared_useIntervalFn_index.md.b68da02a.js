import{_ as C,a as m,b as h}from"./chunks/FunctionInfo.db22c239.js";import{_ as v}from"./chunks/DemoContainer.0b73ea81.js";import{f as _,l as B,ce as f,o as y,c as i,a as s,t as g,H as b,I as F,u as a,i as d,F as E,d as l,bD as I,b as o,w as x,e as k}from"./app.32f1c884.js";import"./chunks/utils.e9c2f9be.js";const S=l(" interval: "),T=_({__name:"demo",setup(D){const A=["Hello","Hi","Yo!","Hey","Hola","\u3053\u3093\u306B\u3061\u306F","Bonjour","Salut!","\u4F60\u597D","\u041F\u0440\u0438\u0432\u0435\u0442"],u=B("Hello"),p=B(500),{pause:t,resume:r,isActive:c}=f(()=>{u.value=A[I(0,A.length-1)]},p);return($,n)=>(y(),i(E,null,[s("p",null,g(u.value),1),s("p",null,[S,b(s("input",{"onUpdate:modelValue":n[0]||(n[0]=e=>p.value=e),type:"number",placeholder:"interval"},null,512),[[F,p.value]])]),a(c)?(y(),i("button",{key:0,class:"orange",onClick:n[1]||(n[1]=(...e)=>a(t)&&a(t)(...e))}," Pause ")):d("",!0),a(c)?d("",!0):(y(),i("button",{key:1,onClick:n[2]||(n[2]=(...e)=>a(r)&&a(r)(...e))}," Resume "))],64))}}),V=s("h1",{id:"useintervalfn",tabindex:"-1"},[l("useIntervalFn "),s("a",{class:"header-anchor",href:"#useintervalfn","aria-hidden":"true"},"#")],-1),w=s("p",null,[l("Wrapper for "),s("code",null,"setInterval"),l(" with controls")],-1),N=s("h2",{id:"demo",tabindex:"-1"},[l("Demo "),s("a",{class:"header-anchor",href:"#demo","aria-hidden":"true"},"#")],-1),U=s("p",{class:"demo-source-link"},[s("a",{href:"https://github.com/vueuse/vueuse/blob/main/packages/shared/useIntervalFn/demo.vue",target:"_blank"},"source")],-1),H=k(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-js"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">useIntervalFn</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;@vueuse/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">pause</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">resume</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">isActive</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">useIntervalFn</span><span style="color:#858585;">(()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#758575;">/* your function */</span></span>
<span class="line"><span style="color:#858585;">},</span><span style="color:#DBD7CA;"> </span><span style="color:#6394BF;">1000</span><span style="color:#858585;">)</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">import</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">useIntervalFn</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;@vueuse/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">pause</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">resume</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">isActive</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">useIntervalFn</span><span style="color:#8E8F8B;">(()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/* your function */</span></span>
<span class="line"><span style="color:#8E8F8B;">},</span><span style="color:#393A34;"> </span><span style="color:#296AA3;">1000</span><span style="color:#8E8F8B;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="type-declarations" tabindex="-1">Type Declarations <a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a></h2><div class="language-typescript"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">interface</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">UseIntervalFnOptions</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#758575;">/**</span></span>
<span class="line"><span style="color:#758575;">   * Start the timer immediately</span></span>
<span class="line"><span style="color:#758575;">   *</span></span>
<span class="line"><span style="color:#758575;">   * </span><span style="color:#858585;">@</span><span style="color:#CB7676;">default</span><span style="color:#758575;"> </span><span style="color:#B8A965;">true</span></span>
<span class="line"><span style="color:#758575;">   */</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#B8A965;">immediate</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">boolean</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#758575;">/**</span></span>
<span class="line"><span style="color:#758575;">   * Execute the callback immediate after calling this function</span></span>
<span class="line"><span style="color:#758575;">   *</span></span>
<span class="line"><span style="color:#758575;">   * </span><span style="color:#858585;">@</span><span style="color:#CB7676;">default</span><span style="color:#758575;"> </span><span style="color:#B8A965;">false</span></span>
<span class="line"><span style="color:#758575;">   */</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#B8A965;">immediateCallback</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">boolean</span></span>
<span class="line"><span style="color:#858585;">}</span></span>
<span class="line"><span style="color:#758575;">/**</span></span>
<span class="line"><span style="color:#758575;"> * Wrapper for \`setInterval\` with controls</span></span>
<span class="line"><span style="color:#758575;"> *</span></span>
<span class="line"><span style="color:#758575;"> * </span><span style="color:#858585;">@</span><span style="color:#CB7676;">param</span><span style="color:#758575;"> </span><span style="color:#B8A965;">cb</span></span>
<span class="line"><span style="color:#758575;"> * </span><span style="color:#858585;">@</span><span style="color:#CB7676;">param</span><span style="color:#758575;"> </span><span style="color:#B8A965;">interval</span></span>
<span class="line"><span style="color:#758575;"> * </span><span style="color:#858585;">@</span><span style="color:#CB7676;">param</span><span style="color:#758575;"> </span><span style="color:#B8A965;">options</span></span>
<span class="line"><span style="color:#758575;"> */</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">declare</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">useIntervalFn</span><span style="color:#858585;">(</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#B8A965;">cb</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Fn</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#B8A965;">interval</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">MaybeComputedRef</span><span style="color:#858585;">&lt;</span><span style="color:#E0A569;">number</span><span style="color:#858585;">&gt;,</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#B8A965;">options</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">UseIntervalFnOptions</span></span>
<span class="line"><span style="color:#858585;">)</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Pausable</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">UseIntervalFnOptions</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * Start the timer immediately</span></span>
<span class="line"><span style="color:#A0ADA0;">   *</span></span>
<span class="line"><span style="color:#A0ADA0;">   * </span><span style="color:#8E8F8B;">@</span><span style="color:#AB5959;">default</span><span style="color:#A0ADA0;"> </span><span style="color:#8C862B;">true</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8C862B;">immediate</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B58451;">boolean</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * Execute the callback immediate after calling this function</span></span>
<span class="line"><span style="color:#A0ADA0;">   *</span></span>
<span class="line"><span style="color:#A0ADA0;">   * </span><span style="color:#8E8F8B;">@</span><span style="color:#AB5959;">default</span><span style="color:#A0ADA0;"> </span><span style="color:#8C862B;">false</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8C862B;">immediateCallback</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#B58451;">boolean</span></span>
<span class="line"><span style="color:#8E8F8B;">}</span></span>
<span class="line"><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;"> * Wrapper for \`setInterval\` with controls</span></span>
<span class="line"><span style="color:#A0ADA0;"> *</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#8E8F8B;">@</span><span style="color:#AB5959;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#8C862B;">cb</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#8E8F8B;">@</span><span style="color:#AB5959;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#8C862B;">interval</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#8E8F8B;">@</span><span style="color:#AB5959;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#8C862B;">options</span></span>
<span class="line"><span style="color:#A0ADA0;"> */</span></span>
<span class="line"><span style="color:#1C6B48;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">declare</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">useIntervalFn</span><span style="color:#8E8F8B;">(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8C862B;">cb</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Fn</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8C862B;">interval</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">MaybeComputedRef</span><span style="color:#8E8F8B;">&lt;</span><span style="color:#B58451;">number</span><span style="color:#8E8F8B;">&gt;,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8C862B;">options</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">UseIntervalFnOptions</span></span>
<span class="line"><span style="color:#8E8F8B;">)</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Pausable</span></span>
<span class="line"></span></code></pre></div><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-hidden="true">#</a></h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/useIntervalFn/index.ts" target="_blank" rel="noopener noreferrer">Source</a> \u2022 <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/useIntervalFn/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> \u2022 <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/useIntervalFn/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,7),O=s("h2",{id:"changelog",tabindex:"-1"},[l("Changelog "),s("a",{class:"header-anchor",href:"#changelog","aria-hidden":"true"},"#")],-1),J=JSON.parse('{"title":"useIntervalFn","description":"","frontmatter":{"category":"Animation"},"headers":[{"level":2,"title":"Demo","slug":"demo"},{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"},{"level":2,"title":"Contributors","slug":"contributors"},{"level":2,"title":"Changelog","slug":"changelog"}],"relativePath":"shared/useIntervalFn/index.md"}'),P={name:"shared/useIntervalFn/index.md"},Y=Object.assign(P,{setup(D){return(A,u)=>{const p=C,t=v,r=m,c=h;return y(),i("div",null,[V,w,N,o(p,{fn:"useIntervalFn"}),o(t,null,{default:x(()=>[U,o(T)]),_:1}),H,o(r,{fn:"useIntervalFn"}),O,o(c,{fn:"useIntervalFn"})])}}});export{J as __pageData,Y as default};

import{_ as C,a as D,b as v}from"./chunks/FunctionInfo.a01ef81f.js";import{_ as f}from"./chunks/DemoContainer.0b73ea81.js";import{l as u,f as B,c2 as h,g as E,o as r,c,b as o,u as A,d as y,c3 as b,a as s,t as i,F,w as T,e as m}from"./app.32f1c884.js";import{_}from"./chunks/BooleanDisplay.831762a0.js";import"./chunks/utils.e9c2f9be.js";const p=u(0),x=y(" Is over 5: "),k=B({__name:"LazyDemo",emits:["update"],setup(d,{emit:e}){h(()=>e("update"));const l=E(()=>p.value>5);return(t,a)=>{const n=_;return r(),c("div",null,[x,o(n,{value:A(l)},null,8,["value"])])}}}),$=y(" Is over 5: "),w=B({__name:"EagerDemo",emits:["update"],setup(d,{emit:e}){h(()=>e("update"));const l=b(()=>p.value>5);return(t,a)=>{const n=_;return r(),c("div",null,[$,o(n,{value:A(l)},null,8,["value"])])}}}),O={grid:"","grid-cols-2":""},S=s("span",{"text-primary":"","font-bold":""},"Lazy Computed",-1),V={"font-mono":""},R=s("span",{"text-primary":"","font-bold":""},"Eager Computed",-1),I={"font-mono":""},N={"mt-4":"","font-mono":""},U=B({__name:"demo",setup(d){const e=u(0),l=u(0);return(t,a)=>(r(),c(F,null,[s("div",O,[s("div",null,[S,s("div",V,[o(k,{onUpdate:a[0]||(a[0]=n=>e.value++)}),s("div",null," Renders: "+i(e.value),1)])]),s("div",null,[R,s("div",I,[o(w,{onUpdate:a[1]||(a[1]=n=>l.value++)}),s("div",null,"Renders: "+i(l.value),1)])])]),s("div",N," Count: "+i(A(p)),1),s("button",{secondary:"",onClick:a[2]||(a[2]=n=>p.value--)}," Decrement "),s("button",{onClick:a[3]||(a[3]=n=>p.value++)}," Increment ")],64))}}),z=s("h1",{id:"computedeager",tabindex:"-1"},[y("computedEager "),s("a",{class:"header-anchor",href:"#computedeager","aria-hidden":"true"},"#")],-1),L=m('<p>Eager computed without lazy evaluation.</p><p>\u53CA\u65F6\u8BA1\u7B97\u800C\u4E0D\u662F\u61D2\u8BA1\u7B97\u3002</p><p>Learn more at <a href="https://dev.to/linusborg/vue-when-a-computed-property-can-be-the-wrong-tool-195j" target="_blank" rel="noopener noreferrer">Vue: When a computed property can be the wrong tool</a>.</p><p>\u9605\u8BFB <a href="https://dev.to/linusborg/vue-when-a-computed-property-can-be-the-wrong-tool-195j" target="_blank" rel="noopener noreferrer">Vue: When a computed property can be the wrong tool</a> \u4E86\u89E3\u66F4\u591A\u3002</p><ul><li><p>Use <code>computed()</code> when you have a complex calculation going on, which can actually profit from caching and lazy evaluation and should only be (re-)calculated if really necessary.</p></li><li><p>Use <code>computedEager()</code> when you have a simple operation, with a rarely changing return value \u2013 often a boolean.</p></li><li><p>\u590D\u6742\u7684\u8BA1\u7B97\u8BF7\u4F7F\u7528 <code>computed()</code>\uFF0C\u53EF\u4EE5\u4ECE\u7F13\u5B58\u7ED3\u679C\u548C\u61D2\u8BA1\u7B97\u4E2D\u83B7\u76CA\uFF0C\u5E76\u4E14\u4EC5\u5E94\u8BE5\u5728\u5FC5\u8981\u7684\u65F6\u5019\uFF08\u91CD\u65B0\uFF09\u8BA1\u7B97\u3002</p></li><li><p>\u7B80\u5355\u7684\u64CD\u4F5C\u5E76\u4E14\u8FD4\u56DE\u503C\u5F88\u5C11\u6539\u53D8\uFF0C\u901A\u5E38\u662F\u5E03\u5C14\u503C\uFF0C\u8FD9\u79CD\u60C5\u51B5\u8BF7\u4F7F\u7528 <code>computedEager()</code>\uFF0C</p></li></ul><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-hidden="true">#</a></h2>',6),P=s("p",{class:"demo-source-link"},[s("a",{href:"https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/demo.vue",target:"_blank"},"source")],-1),j=m(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-js"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">computedEager</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;@vueuse/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">todos</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">ref</span><span style="color:#858585;">([])</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">hasOpenTodos</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">computedEager</span><span style="color:#858585;">(()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">!!</span><span style="color:#B8A965;">todos</span><span style="color:#858585;">.</span><span style="color:#429988;">length</span><span style="color:#858585;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">console</span><span style="color:#858585;">.</span><span style="color:#A1B567;">log</span><span style="color:#858585;">(</span><span style="color:#B8A965;">hasOpenTodos</span><span style="color:#858585;">.</span><span style="color:#B8A965;">value</span><span style="color:#858585;">)</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// false</span></span>
<span class="line"><span style="color:#B8A965;">toTodos</span><span style="color:#858585;">.</span><span style="color:#B8A965;">value</span><span style="color:#858585;">.</span><span style="color:#A1B567;">push</span><span style="color:#858585;">({</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">title</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;Learn Vue&#39;</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">})</span></span>
<span class="line"><span style="color:#B8A965;">console</span><span style="color:#858585;">.</span><span style="color:#A1B567;">log</span><span style="color:#858585;">(</span><span style="color:#B8A965;">hasOpenTodos</span><span style="color:#858585;">.</span><span style="color:#B8A965;">value</span><span style="color:#858585;">)</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// true</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">import</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">computedEager</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;@vueuse/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">todos</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">ref</span><span style="color:#8E8F8B;">([])</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">hasOpenTodos</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">computedEager</span><span style="color:#8E8F8B;">(()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!!</span><span style="color:#8C862B;">todos</span><span style="color:#8E8F8B;">.</span><span style="color:#2F8A89;">length</span><span style="color:#8E8F8B;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8C862B;">console</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">log</span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">hasOpenTodos</span><span style="color:#8E8F8B;">.</span><span style="color:#8C862B;">value</span><span style="color:#8E8F8B;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// false</span></span>
<span class="line"><span style="color:#8C862B;">toTodos</span><span style="color:#8E8F8B;">.</span><span style="color:#8C862B;">value</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">push</span><span style="color:#8E8F8B;">({</span><span style="color:#393A34;"> </span><span style="color:#B58451;">title</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;Learn Vue&#39;</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">})</span></span>
<span class="line"><span style="color:#8C862B;">console</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">log</span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">hasOpenTodos</span><span style="color:#8E8F8B;">.</span><span style="color:#8C862B;">value</span><span style="color:#8E8F8B;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// true</span></span>
<span class="line"></span></code></pre></div><h2 id="type-declarations" tabindex="-1">Type Declarations <a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a></h2><div class="language-typescript"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">declare</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">computedEager</span><span style="color:#858585;">&lt;</span><span style="color:#A1B567;">T</span><span style="color:#858585;">&gt;(</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#A1B567;">fn</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">T</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#B8A965;">options</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">WatchOptionsBase</span></span>
<span class="line"><span style="color:#858585;">)</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Readonly</span><span style="color:#858585;">&lt;</span><span style="color:#A1B567;">Ref</span><span style="color:#858585;">&lt;</span><span style="color:#A1B567;">T</span><span style="color:#858585;">&gt;&gt;</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">computedEager</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">eagerComputed</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">declare</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">computedEager</span><span style="color:#8E8F8B;">&lt;</span><span style="color:#6C7834;">T</span><span style="color:#8E8F8B;">&gt;(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#6C7834;">fn</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">T</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8C862B;">options</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">WatchOptionsBase</span></span>
<span class="line"><span style="color:#8E8F8B;">)</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Readonly</span><span style="color:#8E8F8B;">&lt;</span><span style="color:#6C7834;">Ref</span><span style="color:#8E8F8B;">&lt;</span><span style="color:#6C7834;">T</span><span style="color:#8E8F8B;">&gt;&gt;</span></span>
<span class="line"><span style="color:#1C6B48;">export</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">computedEager</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">as</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">eagerComputed</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-hidden="true">#</a></h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/index.ts" target="_blank" rel="noopener noreferrer">Source</a> \u2022 <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> \u2022 <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,7),W=s("h2",{id:"changelog",tabindex:"-1"},[y("Changelog "),s("a",{class:"header-anchor",href:"#changelog","aria-hidden":"true"},"#")],-1),Q=JSON.parse('{"title":"computedEager","description":"","frontmatter":{"category":"Reactivity","alias":"eagerComputed"},"headers":[{"level":2,"title":"Demo","slug":"demo"},{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"},{"level":2,"title":"Contributors","slug":"contributors"},{"level":2,"title":"Changelog","slug":"changelog"}],"relativePath":"shared/computedEager/index.md"}'),J={name:"shared/computedEager/index.md"},X=Object.assign(J,{setup(d){return(e,l)=>{const t=C,a=f,n=D,g=v;return r(),c("div",null,[z,o(t,{fn:"computedEager"}),L,o(a,null,{default:T(()=>[P,o(U)]),_:1}),j,o(n,{fn:"computedEager"}),W,o(g,{fn:"computedEager"})])}}});export{Q as __pageData,X as default};

import{_ as D,a as C,b as m}from"./chunks/FunctionInfo.db22c239.js";import{_ as h}from"./chunks/DemoContainer.0b73ea81.js";import{f as _,l as g,by as f,o as B,c as A,a as s,t as u,u as a,bz as b,b as n,w as v,d as r,e as E}from"./app.32f1c884.js";import"./chunks/utils.e9c2f9be.js";const T=_({__name:"demo",setup(d){const p=g(0),y=async()=>{await b(1e3),p.value++},{isActive:t,pause:o,resume:l}=f(y,1e3);return(i,e)=>(B(),A("div",null,[s("div",null,"Count: "+u(p.value),1),s("div",null,"isActive: "+u(a(t)),1),s("div",null,[s("button",{onClick:e[0]||(e[0]=(...c)=>a(o)&&a(o)(...c))}," pause "),s("button",{onClick:e[1]||(e[1]=(...c)=>a(l)&&a(l)(...c))}," resume ")])]))}}),F=s("h1",{id:"usetimeoutpoll",tabindex:"-1"},[r("useTimeoutPoll "),s("a",{class:"header-anchor",href:"#usetimeoutpoll","aria-hidden":"true"},"#")],-1),P=s("p",null,"Use timeout to poll something. It's will trigger callback after last task is done.",-1),x=s("h2",{id:"demo",tabindex:"-1"},[r("Demo "),s("a",{class:"header-anchor",href:"#demo","aria-hidden":"true"},"#")],-1),k=s("p",{class:"demo-source-link"},[s("a",{href:"https://github.com/vueuse/vueuse/blob/main/packages/core/useTimeoutPoll/demo.vue",target:"_blank"},"source")],-1),S=E(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-ts"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">useTimeoutPoll</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;@vueuse/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">count</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">ref</span><span style="color:#858585;">(</span><span style="color:#6394BF;">0</span><span style="color:#858585;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">fetchData</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">promiseTimeout</span><span style="color:#858585;">(</span><span style="color:#6394BF;">1000</span><span style="color:#858585;">)</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#B8A965;">count</span><span style="color:#858585;">.</span><span style="color:#B8A965;">value</span><span style="color:#CB7676;">++</span></span>
<span class="line"><span style="color:#858585;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575;">// Only trigger after last fetch is done</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">isActive</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">pause</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">resume</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">useTimeoutPoll</span><span style="color:#858585;">(</span><span style="color:#B8A965;">fetchData</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#6394BF;">1000</span><span style="color:#858585;">)</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">import</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">useTimeoutPoll</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;@vueuse/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">count</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">ref</span><span style="color:#8E8F8B;">(</span><span style="color:#296AA3;">0</span><span style="color:#8E8F8B;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">fetchData</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1C6B48;">await</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">promiseTimeout</span><span style="color:#8E8F8B;">(</span><span style="color:#296AA3;">1000</span><span style="color:#8E8F8B;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8C862B;">count</span><span style="color:#8E8F8B;">.</span><span style="color:#8C862B;">value</span><span style="color:#AB5959;">++</span></span>
<span class="line"><span style="color:#8E8F8B;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Only trigger after last fetch is done</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">isActive</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">pause</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">resume</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">useTimeoutPoll</span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">fetchData</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#296AA3;">1000</span><span style="color:#8E8F8B;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="type-declarations" tabindex="-1">Type Declarations <a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a></h2><div class="language-typescript"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">declare</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">useTimeoutPoll</span><span style="color:#858585;">(</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#A1B567;">fn</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Awaitable</span><span style="color:#858585;">&lt;</span><span style="color:#E0A569;">void</span><span style="color:#858585;">&gt;,</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#B8A965;">interval</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">MaybeComputedRef</span><span style="color:#858585;">&lt;</span><span style="color:#E0A569;">number</span><span style="color:#858585;">&gt;,</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#B8A965;">timeoutPollOptions</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">UseTimeoutFnOptions</span></span>
<span class="line"><span style="color:#858585;">)</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Pausable</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">declare</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">useTimeoutPoll</span><span style="color:#8E8F8B;">(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#6C7834;">fn</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Awaitable</span><span style="color:#8E8F8B;">&lt;</span><span style="color:#B58451;">void</span><span style="color:#8E8F8B;">&gt;,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8C862B;">interval</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">MaybeComputedRef</span><span style="color:#8E8F8B;">&lt;</span><span style="color:#B58451;">number</span><span style="color:#8E8F8B;">&gt;,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8C862B;">timeoutPollOptions</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">UseTimeoutFnOptions</span></span>
<span class="line"><span style="color:#8E8F8B;">)</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Pausable</span></span>
<span class="line"></span></code></pre></div><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-hidden="true">#</a></h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useTimeoutPoll/index.ts" target="_blank" rel="noopener noreferrer">Source</a> \u2022 <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useTimeoutPoll/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> \u2022 <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useTimeoutPoll/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,7),w=s("h2",{id:"changelog",tabindex:"-1"},[r("Changelog "),s("a",{class:"header-anchor",href:"#changelog","aria-hidden":"true"},"#")],-1),I=JSON.parse('{"title":"useTimeoutPoll","description":"","frontmatter":{"category":"Utilities"},"headers":[{"level":2,"title":"Demo","slug":"demo"},{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"},{"level":2,"title":"Contributors","slug":"contributors"},{"level":2,"title":"Changelog","slug":"changelog"}],"relativePath":"core/useTimeoutPoll/index.md"}'),O={name:"core/useTimeoutPoll/index.md"},R=Object.assign(O,{setup(d){return(p,y)=>{const t=D,o=h,l=C,i=m;return B(),A("div",null,[F,P,x,n(t,{fn:"useTimeoutPoll"}),n(o,null,{default:v(()=>[k,n(T)]),_:1}),S,n(l,{fn:"useTimeoutPoll"}),w,n(i,{fn:"useTimeoutPoll"})])}}});export{I as __pageData,R as default};

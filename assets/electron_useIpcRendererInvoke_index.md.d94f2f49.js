import{_ as p,a as r,b as c}from"./chunks/FunctionInfo.f3fe6a78.js";import{_ as t,o as y,c as i,b as n,e as A,a as s,d as e}from"./app.32f1c884.js";import"./chunks/utils.e9c2f9be.js";const F=JSON.parse('{"title":"useIpcRendererInvoke","description":"","frontmatter":{"category":"@Electron"},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"},{"level":2,"title":"Contributors","slug":"contributors"},{"level":2,"title":"Changelog","slug":"changelog"}],"relativePath":"electron/useIpcRendererInvoke/index.md"}'),B={name:"electron/useIpcRendererInvoke/index.md"},d=A(`<h1 id="useipcrendererinvoke" tabindex="-1">useIpcRendererInvoke <a class="header-anchor" href="#useipcrendererinvoke" aria-hidden="true">#</a></h1><p>Reactive <a href="https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args" target="_blank" rel="noopener noreferrer">ipcRenderer.invoke API</a> result. Make asynchronous operations look synchronous.</p><p>Available in the <a href="/electron/README">@vueuse/electron</a> add-on.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-ts"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">useIpcRendererInvoke</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;@vueuse/electron&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575;">// enable nodeIntegration if you don&#39;t provide ipcRenderer explicitly</span></span>
<span class="line"><span style="color:#758575;">// @see: https://www.electronjs.org/docs/api/webview-tag#nodeintegration</span></span>
<span class="line"><span style="color:#758575;">// Ref result will return</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">result</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">useIpcRendererInvoke</span><span style="color:#858585;">&lt;</span><span style="color:#E0A569;">string</span><span style="color:#858585;">&gt;(</span><span style="color:#C98A7D;">&#39;custom-channel&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;some data&#39;</span><span style="color:#858585;">)</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">msg</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">computed</span><span style="color:#858585;">(()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">result</span><span style="color:#858585;">.</span><span style="color:#B8A965;">value</span><span style="color:#858585;">?.</span><span style="color:#B8A965;">msg</span><span style="color:#858585;">)</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">import</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">useIpcRendererInvoke</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;@vueuse/electron&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// enable nodeIntegration if you don&#39;t provide ipcRenderer explicitly</span></span>
<span class="line"><span style="color:#A0ADA0;">// @see: https://www.electronjs.org/docs/api/webview-tag#nodeintegration</span></span>
<span class="line"><span style="color:#A0ADA0;">// Ref result will return</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">result</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">useIpcRendererInvoke</span><span style="color:#8E8F8B;">&lt;</span><span style="color:#B58451;">string</span><span style="color:#8E8F8B;">&gt;(</span><span style="color:#B56959;">&#39;custom-channel&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;some data&#39;</span><span style="color:#8E8F8B;">)</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">msg</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">computed</span><span style="color:#8E8F8B;">(()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">result</span><span style="color:#8E8F8B;">.</span><span style="color:#8C862B;">value</span><span style="color:#8E8F8B;">?.</span><span style="color:#8C862B;">msg</span><span style="color:#8E8F8B;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="type-declarations" tabindex="-1">Type Declarations <a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a></h2>`,6),u=s("details",null,[s("summary",{op50:"",italic:""},"Show Type Declarations"),s("div",{class:"language-typescript"},[s("span",{class:"copy"}),s("pre",{class:"vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#758575"}},"/**")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," * Returns Promise<any> - Resolves with the response from the main process.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," * Send a message to the main process via channel and expect a result ~~asynchronously~~. As composition-api, it makes asynchronous operations look like synchronous.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," * You need to provide `ipcRenderer` to this function.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," * "),s("span",{style:{color:"#858585"}},"@"),s("span",{style:{color:"#CB7676"}},"see"),s("span",{style:{color:"#758575"}}," "),s("span",{style:{color:"#B8A965"}},"https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," * "),s("span",{style:{color:"#858585"}},"@"),s("span",{style:{color:"#CB7676"}},"see"),s("span",{style:{color:"#758575"}}," "),s("span",{style:{color:"#B8A965"}},"https://vueuse.org/useIpcRendererInvoke")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," */")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4D9375"}},"export"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#CB7676"}},"declare"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#CB7676"}},"function"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#A1B567"}},"useIpcRendererInvoke"),s("span",{style:{color:"#858585"}},"<"),s("span",{style:{color:"#A1B567"}},"T"),s("span",{style:{color:"#858585"}},">(")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CA"}},"  "),s("span",{style:{color:"#B8A965"}},"ipcRenderer"),s("span",{style:{color:"#CB7676"}},":"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#A1B567"}},"IpcRenderer"),s("span",{style:{color:"#858585"}},",")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CA"}},"  "),s("span",{style:{color:"#B8A965"}},"channel"),s("span",{style:{color:"#CB7676"}},":"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#E0A569"}},"string"),s("span",{style:{color:"#858585"}},",")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CA"}},"  "),s("span",{style:{color:"#CB7676"}},"..."),s("span",{style:{color:"#B8A965"}},"args"),s("span",{style:{color:"#CB7676"}},":"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#E0A569"}},"any"),s("span",{style:{color:"#858585"}},"[]")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#858585"}},")"),s("span",{style:{color:"#CB7676"}},":"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#A1B567"}},"Ref"),s("span",{style:{color:"#858585"}},"<"),s("span",{style:{color:"#A1B567"}},"T"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#CB7676"}},"|"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#E0A569"}},"null"),s("span",{style:{color:"#858585"}},">")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}},"/**")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," * Returns Promise<any> - Resolves with the response from the main process.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," * Send a message to the main process via channel and expect a result ~~asynchronously~~. As composition-api, it makes asynchronous operations look like synchronous.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," * `ipcRenderer` will be automatically gotten.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," * "),s("span",{style:{color:"#858585"}},"@"),s("span",{style:{color:"#CB7676"}},"see"),s("span",{style:{color:"#758575"}}," "),s("span",{style:{color:"#B8A965"}},"https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," * "),s("span",{style:{color:"#858585"}},"@"),s("span",{style:{color:"#CB7676"}},"see"),s("span",{style:{color:"#758575"}}," "),s("span",{style:{color:"#B8A965"}},"https://vueuse.org/useIpcRendererInvoke")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#758575"}}," */")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#4D9375"}},"export"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#CB7676"}},"declare"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#CB7676"}},"function"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#A1B567"}},"useIpcRendererInvoke"),s("span",{style:{color:"#858585"}},"<"),s("span",{style:{color:"#A1B567"}},"T"),s("span",{style:{color:"#858585"}},">(")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CA"}},"  "),s("span",{style:{color:"#B8A965"}},"channel"),s("span",{style:{color:"#CB7676"}},":"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#E0A569"}},"string"),s("span",{style:{color:"#858585"}},",")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DBD7CA"}},"  "),s("span",{style:{color:"#CB7676"}},"..."),s("span",{style:{color:"#B8A965"}},"args"),s("span",{style:{color:"#CB7676"}},":"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#E0A569"}},"any"),s("span",{style:{color:"#858585"}},"[]")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#858585"}},")"),s("span",{style:{color:"#CB7676"}},":"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#A1B567"}},"Ref"),s("span",{style:{color:"#858585"}},"<"),s("span",{style:{color:"#A1B567"}},"T"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#CB7676"}},"|"),s("span",{style:{color:"#DBD7CA"}}," "),s("span",{style:{color:"#E0A569"}},"null"),s("span",{style:{color:"#858585"}},">")]),e(`
`),s("span",{class:"line"})])]),s("pre",{class:"vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}},"/**")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * Returns Promise<any> - Resolves with the response from the main process.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * Send a message to the main process via channel and expect a result ~~asynchronously~~. As composition-api, it makes asynchronous operations look like synchronous.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * You need to provide `ipcRenderer` to this function.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * "),s("span",{style:{color:"#8E8F8B"}},"@"),s("span",{style:{color:"#AB5959"}},"see"),s("span",{style:{color:"#A0ADA0"}}," "),s("span",{style:{color:"#8C862B"}},"https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * "),s("span",{style:{color:"#8E8F8B"}},"@"),s("span",{style:{color:"#AB5959"}},"see"),s("span",{style:{color:"#A0ADA0"}}," "),s("span",{style:{color:"#8C862B"}},"https://vueuse.org/useIpcRendererInvoke")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," */")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#1C6B48"}},"export"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#AB5959"}},"declare"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#AB5959"}},"function"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#6C7834"}},"useIpcRendererInvoke"),s("span",{style:{color:"#8E8F8B"}},"<"),s("span",{style:{color:"#6C7834"}},"T"),s("span",{style:{color:"#8E8F8B"}},">(")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  "),s("span",{style:{color:"#8C862B"}},"ipcRenderer"),s("span",{style:{color:"#AB5959"}},":"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#6C7834"}},"IpcRenderer"),s("span",{style:{color:"#8E8F8B"}},",")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  "),s("span",{style:{color:"#8C862B"}},"channel"),s("span",{style:{color:"#AB5959"}},":"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B58451"}},"string"),s("span",{style:{color:"#8E8F8B"}},",")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  "),s("span",{style:{color:"#AB5959"}},"..."),s("span",{style:{color:"#8C862B"}},"args"),s("span",{style:{color:"#AB5959"}},":"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B58451"}},"any"),s("span",{style:{color:"#8E8F8B"}},"[]")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#8E8F8B"}},")"),s("span",{style:{color:"#AB5959"}},":"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#6C7834"}},"Ref"),s("span",{style:{color:"#8E8F8B"}},"<"),s("span",{style:{color:"#6C7834"}},"T"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#AB5959"}},"|"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B58451"}},"null"),s("span",{style:{color:"#8E8F8B"}},">")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}},"/**")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * Returns Promise<any> - Resolves with the response from the main process.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * Send a message to the main process via channel and expect a result ~~asynchronously~~. As composition-api, it makes asynchronous operations look like synchronous.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * `ipcRenderer` will be automatically gotten.")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," *")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * "),s("span",{style:{color:"#8E8F8B"}},"@"),s("span",{style:{color:"#AB5959"}},"see"),s("span",{style:{color:"#A0ADA0"}}," "),s("span",{style:{color:"#8C862B"}},"https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," * "),s("span",{style:{color:"#8E8F8B"}},"@"),s("span",{style:{color:"#AB5959"}},"see"),s("span",{style:{color:"#A0ADA0"}}," "),s("span",{style:{color:"#8C862B"}},"https://vueuse.org/useIpcRendererInvoke")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A0ADA0"}}," */")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#1C6B48"}},"export"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#AB5959"}},"declare"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#AB5959"}},"function"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#6C7834"}},"useIpcRendererInvoke"),s("span",{style:{color:"#8E8F8B"}},"<"),s("span",{style:{color:"#6C7834"}},"T"),s("span",{style:{color:"#8E8F8B"}},">(")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  "),s("span",{style:{color:"#8C862B"}},"channel"),s("span",{style:{color:"#AB5959"}},":"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B58451"}},"string"),s("span",{style:{color:"#8E8F8B"}},",")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#393A34"}},"  "),s("span",{style:{color:"#AB5959"}},"..."),s("span",{style:{color:"#8C862B"}},"args"),s("span",{style:{color:"#AB5959"}},":"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B58451"}},"any"),s("span",{style:{color:"#8E8F8B"}},"[]")]),e(`
`),s("span",{class:"line"},[s("span",{style:{color:"#8E8F8B"}},")"),s("span",{style:{color:"#AB5959"}},":"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#6C7834"}},"Ref"),s("span",{style:{color:"#8E8F8B"}},"<"),s("span",{style:{color:"#6C7834"}},"T"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#AB5959"}},"|"),s("span",{style:{color:"#393A34"}}," "),s("span",{style:{color:"#B58451"}},"null"),s("span",{style:{color:"#8E8F8B"}},">")]),e(`
`),s("span",{class:"line"})])])])],-1),h=s("h2",{id:"source",tabindex:"-1"},[e("Source "),s("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#")],-1),D=s("p",null,[s("a",{href:"https://github.com/vueuse/vueuse/blob/main/packages/electron/useIpcRendererInvoke/index.ts",target:"_blank",rel:"noopener noreferrer"},"Source"),e(" \u2022 "),s("a",{href:"https://github.com/vueuse/vueuse/blob/main/packages/electron/useIpcRendererInvoke/index.md",target:"_blank",rel:"noopener noreferrer"},"Docs")],-1),C=s("h2",{id:"contributors",tabindex:"-1"},[e("Contributors "),s("a",{class:"header-anchor",href:"#contributors","aria-hidden":"true"},"#")],-1),g=s("h2",{id:"changelog",tabindex:"-1"},[e("Changelog "),s("a",{class:"header-anchor",href:"#changelog","aria-hidden":"true"},"#")],-1);function v(m,k,_,I,R,f){const l=p,o=r,a=c;return y(),i("div",null,[d,u,h,n(l,{fn:"useIpcRendererInvoke"}),D,C,n(o,{fn:"useIpcRendererInvoke"}),g,n(a,{fn:"useIpcRendererInvoke"})])}var x=t(B,[["render",v]]);export{F as __pageData,x as default};

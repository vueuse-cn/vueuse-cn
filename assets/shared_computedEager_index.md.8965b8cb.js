import{_ as C,a as D,b as v}from"./chunks/FunctionInfo.bad951e4.js";import{_ as f}from"./chunks/DemoContainer.27403c15.js";import{l as d,f as u,c2 as h,g as E,o as r,c,b as o,u as B,d as A,c3 as b,a as s,t as i,F,w as T,e as m}from"./app.28320a3a.js";import{_}from"./chunks/BooleanDisplay.12b7fb61.js";import"./chunks/utils.e9c2f9be.js";const p=d(0),x=A(" Is over 5: "),k=u({__name:"LazyDemo",emits:["update"],setup(y,{emit:e}){h(()=>e("update"));const l=E(()=>p.value>5);return(t,a)=>{const n=_;return r(),c("div",null,[x,o(n,{value:B(l)},null,8,["value"])])}}}),$=A(" Is over 5: "),O=u({__name:"EagerDemo",emits:["update"],setup(y,{emit:e}){h(()=>e("update"));const l=b(()=>p.value>5);return(t,a)=>{const n=_;return r(),c("div",null,[$,o(n,{value:B(l)},null,8,["value"])])}}}),S={grid:"","grid-cols-2":""},R=s("span",{"text-primary":"","font-bold":""},"Lazy Computed",-1),V={"font-mono":""},w=s("span",{"text-primary":"","font-bold":""},"Eager Computed",-1),I={"font-mono":""},N={"mt-4":"","font-mono":""},U=u({__name:"demo",setup(y){const e=d(0),l=d(0);return(t,a)=>(r(),c(F,null,[s("div",S,[s("div",null,[R,s("div",V,[o(k,{onUpdate:a[0]||(a[0]=n=>e.value++)}),s("div",null," Renders: "+i(e.value),1)])]),s("div",null,[w,s("div",I,[o(O,{onUpdate:a[1]||(a[1]=n=>l.value++)}),s("div",null,"Renders: "+i(l.value),1)])])]),s("div",N," Count: "+i(B(p)),1),s("button",{secondary:"",onClick:a[2]||(a[2]=n=>p.value--)}," Decrement "),s("button",{onClick:a[3]||(a[3]=n=>p.value++)}," Increment ")],64))}}),z=m('<h1 id="computedeager" tabindex="-1">computedEager <a class="header-anchor" href="#computedeager" aria-hidden="true">#</a></h1><p>Eager computed without lazy evaluation.</p><p>Learn more at <a href="https://dev.to/linusborg/vue-when-a-computed-property-can-be-the-wrong-tool-195j" target="_blank" rel="noopener noreferrer">Vue: When a computed property can be the wrong tool</a>.</p><ul><li>Use <code>computed()</code> when you have a complex calculation going on, which can actually profit from caching and lazy evaluation and should only be (re-)calculated if really necessary.</li><li>Use <code>computedEager()</code> when you have a simple operation, with a rarely changing return value \u2013 often a boolean.</li></ul><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-hidden="true">#</a></h2>',5),L=s("p",{class:"demo-source-link"},[s("a",{href:"https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/demo.vue",target:"_blank"},"source")],-1),P=m(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-js"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">computedEager</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;@vueuse/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">todos</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">ref</span><span style="color:#858585;">([])</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">hasOpenTodos</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">computedEager</span><span style="color:#858585;">(()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">!!</span><span style="color:#B8A965;">todos</span><span style="color:#858585;">.</span><span style="color:#429988;">length</span><span style="color:#858585;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">console</span><span style="color:#858585;">.</span><span style="color:#A1B567;">log</span><span style="color:#858585;">(</span><span style="color:#B8A965;">hasOpenTodos</span><span style="color:#858585;">.</span><span style="color:#B8A965;">value</span><span style="color:#858585;">)</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// false</span></span>
<span class="line"><span style="color:#B8A965;">toTodos</span><span style="color:#858585;">.</span><span style="color:#B8A965;">value</span><span style="color:#858585;">.</span><span style="color:#A1B567;">push</span><span style="color:#858585;">({</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">title</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;Learn Vue&#39;</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">})</span></span>
<span class="line"><span style="color:#B8A965;">console</span><span style="color:#858585;">.</span><span style="color:#A1B567;">log</span><span style="color:#858585;">(</span><span style="color:#B8A965;">hasOpenTodos</span><span style="color:#858585;">.</span><span style="color:#B8A965;">value</span><span style="color:#858585;">)</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// true</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">import</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">computedEager</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;@vueuse/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">todos</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">ref</span><span style="color:#8E8F8B;">([])</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">hasOpenTodos</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">computedEager</span><span style="color:#8E8F8B;">(()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!!</span><span style="color:#8C862B;">todos</span><span style="color:#8E8F8B;">.</span><span style="color:#2F8A89;">length</span><span style="color:#8E8F8B;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8C862B;">console</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">log</span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">hasOpenTodos</span><span style="color:#8E8F8B;">.</span><span style="color:#8C862B;">value</span><span style="color:#8E8F8B;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// false</span></span>
<span class="line"><span style="color:#8C862B;">toTodos</span><span style="color:#8E8F8B;">.</span><span style="color:#8C862B;">value</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">push</span><span style="color:#8E8F8B;">({</span><span style="color:#393A34;"> </span><span style="color:#B58451;">title</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;Learn Vue&#39;</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">})</span></span>
<span class="line"><span style="color:#8C862B;">console</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">log</span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">hasOpenTodos</span><span style="color:#8E8F8B;">.</span><span style="color:#8C862B;">value</span><span style="color:#8E8F8B;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// true</span></span>
<span class="line"></span></code></pre></div><h2 id="type-declarations" tabindex="-1">Type Declarations <a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a></h2><div class="language-typescript"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">declare</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">computedEager</span><span style="color:#858585;">&lt;</span><span style="color:#A1B567;">T</span><span style="color:#858585;">&gt;(</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#A1B567;">fn</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">T</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#B8A965;">options</span><span style="color:#CB7676;">?:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">WatchOptionsBase</span></span>
<span class="line"><span style="color:#858585;">)</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Readonly</span><span style="color:#858585;">&lt;</span><span style="color:#A1B567;">Ref</span><span style="color:#858585;">&lt;</span><span style="color:#A1B567;">T</span><span style="color:#858585;">&gt;&gt;</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">computedEager</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">eagerComputed</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">declare</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">computedEager</span><span style="color:#8E8F8B;">&lt;</span><span style="color:#6C7834;">T</span><span style="color:#8E8F8B;">&gt;(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#6C7834;">fn</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">T</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8C862B;">options</span><span style="color:#AB5959;">?:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">WatchOptionsBase</span></span>
<span class="line"><span style="color:#8E8F8B;">)</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Readonly</span><span style="color:#8E8F8B;">&lt;</span><span style="color:#6C7834;">Ref</span><span style="color:#8E8F8B;">&lt;</span><span style="color:#6C7834;">T</span><span style="color:#8E8F8B;">&gt;&gt;</span></span>
<span class="line"><span style="color:#1C6B48;">export</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">computedEager</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">as</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">eagerComputed</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-hidden="true">#</a></h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/index.ts" target="_blank" rel="noopener noreferrer">Source</a> \u2022 <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> \u2022 <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/computedEager/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,7),j=s("h2",{id:"changelog",tabindex:"-1"},[A("Changelog "),s("a",{class:"header-anchor",href:"#changelog","aria-hidden":"true"},"#")],-1),M=JSON.parse('{"title":"computedEager","description":"","frontmatter":{"category":"Reactivity","alias":"eagerComputed"},"headers":[{"level":2,"title":"Demo","slug":"demo"},{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"},{"level":2,"title":"Contributors","slug":"contributors"},{"level":2,"title":"Changelog","slug":"changelog"}],"relativePath":"shared/computedEager/index.md"}'),W={name:"shared/computedEager/index.md"},Q=Object.assign(W,{setup(y){return(e,l)=>{const t=C,a=f,n=D,g=v;return r(),c("div",null,[z,o(t,{fn:"computedEager"}),o(a,null,{default:T(()=>[L,o(U)]),_:1}),P,o(n,{fn:"computedEager"}),j,o(g,{fn:"computedEager"})])}}});export{M as __pageData,Q as default};
